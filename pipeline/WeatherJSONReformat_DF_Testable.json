{
	"name": "WeatherJSONReformat_DF_Testable",
	"properties": {
		"activities": [
			{
				"name": "Import JSON",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFileName": {
								"value": "@pipeline().parameters.target_file",
								"type": "Expression"
							},
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "UnzippedJSON",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "UnzippedJSON",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "if debug",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Import JSON",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@pipeline().parameters.debug",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Cache Intermediate Artifact",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ParameterisedDataset",
									"type": "DatasetReference",
									"parameters": {
										"path": {
											"value": "@pipeline().parameters.target_file",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Flatten Weather JSON Testable",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Import JSON",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "Flatten Weather JSON Testable",
						"type": "DataFlowReference",
						"parameters": {
							"source_path": "'/weatherdata/test/source.json'",
							"target_folder": "'/weatherdata/test/json'"
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"target_file": {
				"type": "string"
			},
			"debug": {
				"type": "bool",
				"defaultValue": false
			},
			"cache_folder": {
				"type": "string",
				"defaultValue": "/cache/"
			}
		},
		"folder": {
			"name": "Test_Reformat"
		},
		"annotations": [],
		"lastPublishTime": "2022-02-02T14:44:04Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}